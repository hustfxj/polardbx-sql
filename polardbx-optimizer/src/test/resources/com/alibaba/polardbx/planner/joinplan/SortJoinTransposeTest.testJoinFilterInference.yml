
- 
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from 

      (
        select *
        from
          test_hash_tb
      ) a

      join 
      
      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id
# order by ???????????????? INNER JOIN
  plan: |

    MemSort(sort="id0 ASC")
      BKAJoin(condition="name = name", type="inner")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2` WHERE (`name` IN (...))")

-
  sql: |
    /*+TDDL:cmd_extra(ENABLE_BKA_JOIN=false)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      left join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id
# order by ????????????????LEFT JOIN
  plan: |

    MemSort(sort="id0 ASC")
      HashJoin(condition="name = name", type="left")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2`")

-
  sql: |
    /*+TDDL:cmd_extra(ENABLE_BKA_JOIN=false)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      right join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by a.id
# order by ????????????????RIGHT JOIN
  plan: |

    MemSort(sort="id ASC")
      HashJoin(condition="name = name", type="right")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2`")

-
  sql: |
    /*+TDDL:cmd_extra(ENABLE_BKA_JOIN=false)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by a.id
# order by ??????????????? INNER JOIN
  plan: |

    HashJoin(condition="name = name", type="inner")
      MergeSort(sort="id ASC")
        LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb` ORDER BY `id`")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2`")

-
  sql: |
    /*+TDDL:cmd_extra(ENABLE_BKA_JOIN=false)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      left join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by a.id
# order by ??????????????? LEFT JOIN
  plan: |

    HashJoin(condition="name = name", type="left")
      MergeSort(sort="id ASC")
        LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb` ORDER BY `id`")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2`")

-
  sql: |
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      right join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id
# order by ???????????????RIGHT JOIN
  plan: |

    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col40", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col4", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="name = name", type="left")
        mergesort(sort="id asc")
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` order by `id`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`name` in (...))")

-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      left join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by a.id limit 0, 10
# order by ??????????????? limit ????????
  plan: |
    limit(offset=0, fetch=10)
      bkajoin(condition="name = name", type="left")
        mergesort(sort="id asc", fetch=10)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` order by `id` limit 10")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` where (`name` in (...))")
-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2) ENABLE_SORT_OUTERJOIN_TRANSPOSE=false*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      left join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by a.id limit 0, 10
  plan: |
    limit(offset=0, fetch=10)
      bkajoin(condition="name = name", type="left")
        mergesort(sort="id asc")
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` order by `id`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` where (`name` in (...))")
-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id limit 3,5
# order by ???????? LIMIT ????????INNER JOIN
  plan: |

    TopN(sort="id0 ASC", offset=3, fetch=5)
      BKAJoin(condition="name = name", type="inner")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2` WHERE (`name` IN (...))")

-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      left join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id limit 3,5
# order by ???????? LIMIT ????????LEFT JOIN
  plan: |

    TopN(sort="id0 ASC", offset=3, fetch=5)
      BKAJoin(condition="name = name", type="left")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2` WHERE (`name` IN (...))")

-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      right join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id limit 3,5
# order by ???????? LIMIT ????????RIGHT JOIN
  plan: |
    limit(offset=3, fetch=5)
      bkajoin(condition="name = name", type="right")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`name` in (...))")
        mergesort(sort="id asc", fetch=8)
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` order by `id` limit 8")
-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2) ENABLE_SORT_OUTERJOIN_TRANSPOSE=false*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      right join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id limit 3,5
  # order by ???????? LIMIT ????????RIGHT JOIN
  plan: |
    limit(offset=3, fetch=5)
      bkajoin(condition="name = name", type="right")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`name` in (...))")
        mergesort(sort="id asc")
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` order by `id`")
-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      right join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id limit 2, 10
# order by ??????????????? limit ???? 0, offset + fetch?? RIGHT JOIN
  plan: |
    limit(offset=2, fetch=10)
      bkajoin(condition="name = name", type="right")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`name` in (...))")
        mergesort(sort="id asc", fetch=12)
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` order by `id` limit 12")
-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

      left join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by a.id limit 2, 10
# order by ??????????????? limit ???? 0, offset + fetch?? LEFT JOIN
  plan: |
    limit(offset=2, fetch=10)
      bkajoin(condition="name = name", type="left")
        mergesort(sort="id asc", fetch=12)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` order by `id` limit 12")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` where (`name` in (...))")
-
  sql: |
    /*+TDDL:BKA_JOIN(test_hash_tb,test_hash_tb2)*/
    select *
    from

      (
        select *
        from
          test_hash_tb
      ) a

     join

      (
        select *
        from
          test_hash_tb2
      ) b
      on a.name=b.name
      order by b.id limit 2, 10
# inner join ??????limit ????????
  plan: |

    TopN(sort="id0 ASC", offset=2, fetch=10)
      BKAJoin(condition="name = name", type="inner")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2` WHERE (`name` IN (...))")

-
  sql: |
    select *
    from
      test_hash_tb
      a
      where
      a.name in
      (
        select name
        from
          test_hash_tb2
      )
      order by a.id limit 2, 10
# semi join ??????limit ????????
  plan: |

    topn(sort="id asc", offset=2, fetch=10)
      materializedsemijoin(condition="name = name", type="semi")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`name` in (...))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `name` from `test_hash_tb2` as `test_hash_tb2`")

-
  sql: |
    select *
    from
      test_hash_tb
      a
      where
      a.name not in
      (
        select name
        from
          test_hash_tb2
      )
      order by a.id limit 2, 10
# semi join ??????limit ????????
  plan: |

    TopN(sort="id ASC", offset=2, fetch=10)
      MaterializedSemiJoin(condition="name = name", type="anti")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`name` NOT IN (...))")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `name` FROM `test_hash_tb2` AS `test_hash_tb2`")
