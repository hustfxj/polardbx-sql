- sql: |
    select a.id, a.name
    from 
      (
        select * 
        from
        test_hash_tb
      ) a 



  plan: |

    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")

- sql: |
    select a.id, a.name
    from
      (
        select *
        from
        test_hash_tb
      ) a

    where a.id=5


  plan: |

    phytableoperation(tables="optest_0001.[test_hash_tb]", sql="select `a`.`id`, `a`.`name` from (select `test_hash_tb`.`id`, `test_hash_tb`.`name`, `test_hash_tb`.`create_time`, `test_hash_tb`.`int_col1`, `test_hash_tb`.`int_col2`, `test_hash_tb`.`int_col3`, `test_hash_tb`.`int_col4`, `test_hash_tb`.`int_col5`, `test_hash_tb`.`int_col6` from ? as `test_hash_tb`) as `a` where (`a`.`id` = 5)")

- sql: |
    select a.id, a.name
    from
      (
        select *
        from
        test_hash_tb

      ) a

    order by name


  plan: |

    MergeSort(sort="name ASC")
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb` ORDER BY `name`")

- sql: |
    select max(a.id), a.name
    from
      (
        select *
        from
        test_hash_tb

      ) a

    group by name


  plan: |

    Project(max(a.id)="max(a.id)", name="name")
      HashAgg(group="name", max(a.id)="MAX(max(a.id))")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `name`, MAX(`id`) AS `max(a.id)` FROM `test_hash_tb` AS `test_hash_tb` GROUP BY `name`")

- sql: |
    select id
    from
      (
        select *
        from
        test_hash_tb

      ) a

    limit 100,5


  plan: |

    MergeSort(sort="", offset=100, fetch=5)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id` FROM `test_hash_tb` AS `test_hash_tb` LIMIT 105")

- sql: |
    select count(distinct id)
    from
      (
        select *
        from
        test_hash_tb
        where id>5
      ) a

    limit 2,5


  plan: |

    limit(offset=2, fetch=5)
      hashagg(count(distinct id)="sum(count(distinct id))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select count(`id`) as `count(distinct id)` from `test_hash_tb` as `test_hash_tb` where (`id` > 5)")
- sql: |
    select count(distinct id)
    from
      (
        select *
        from
        test_hash_tb
        where id>5
        order by name
        limit 10
      ) a

    limit 2,5


  plan: |

    Limit(offset=2, fetch=5)
      HashAgg(count(DISTINCT id)="COUNT(id)")
        Project(id="id")
          MergeSort(sort="name ASC", offset=0, fetch=10)
            LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` > 5) ORDER BY `name` LIMIT 10")