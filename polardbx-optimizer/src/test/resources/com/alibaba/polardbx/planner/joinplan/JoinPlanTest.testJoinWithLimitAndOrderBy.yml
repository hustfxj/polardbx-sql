-
  sql: |
    /*+TDDL:cmd_extra(ENABLE_BKA_JOIN=false,ENABLE_SORT_MERGE_JOIN=false)*/
    select * from
      test_hash_tb t1,
      test_hash_tb t2
    where
      t1.name=t2.name
    order by t1.id

  plan: |

    HashJoin(condition="name = name", type="inner")
      MergeSort(sort="id ASC")
        LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` ORDER BY `id`")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")

-
  sql: |
    select * from test_hash_tb t1,test_hash_tb t2 where t1.name=t2.name order by t1.id limit 10

  plan: |

    Limit(offset=0, fetch=10)
      HashJoin(condition="name = name", type="inner")
        MergeSort(sort="id ASC")
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` ORDER BY `id`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")

-
  sql: |
    select * from test_hash_tb t1,test_hash_tb t2 where t1.name=t2.name order by t1.id limit 5, 10

  plan: |

    Limit(offset=5, fetch=10)
      HashJoin(condition="name = name", type="inner")
        MergeSort(sort="id ASC")
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` ORDER BY `id`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")

-
  sql: |
    /*+TDDL:cmd_extra(ENABLE_BKA_JOIN=false,ENABLE_SORT_MERGE_JOIN=false)*/
    select * from test_hash_tb t1,test_hash_tb t2 where t1.id=t2.id order by t1.id limit 10

  plan: |

    MergeSort(sort="id ASC", offset=0, fetch=10)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `test_hash_tb`.`id`, `test_hash_tb`.`name`, `test_hash_tb`.`create_time`, `test_hash_tb0`.`id` AS `id0`, `test_hash_tb0`.`name` AS `name0`, `test_hash_tb0`.`create_time` AS `create_time0` FROM `test_hash_tb` AS `test_hash_tb` INNER JOIN `test_hash_tb` AS `test_hash_tb0` ON (`test_hash_tb`.`id` = `test_hash_tb0`.`id`) ORDER BY `test_hash_tb`.`id` LIMIT 10")

-
  sql: |
    select * from test_hash_tb t1,test_hash_tb t2 where t1.id=t2.id order by t1.name limit 10

  plan: |

    MergeSort(sort="name ASC", offset=0, fetch=10)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `test_hash_tb`.`id`, `test_hash_tb`.`name`, `test_hash_tb`.`create_time`, `test_hash_tb0`.`id` AS `id0`, `test_hash_tb0`.`name` AS `name0`, `test_hash_tb0`.`create_time` AS `create_time0` FROM `test_hash_tb` AS `test_hash_tb` INNER JOIN `test_hash_tb` AS `test_hash_tb0` ON (`test_hash_tb`.`id` = `test_hash_tb0`.`id`) ORDER BY `test_hash_tb`.`name` LIMIT 10")

-
  sql: |
    select * from test_hash_tb t1,test_hash_tb t2 where t1.id=t2.id order by t2.name limit 10

  plan: |

    MergeSort(sort="name0 ASC", offset=0, fetch=10)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `test_hash_tb`.`id`, `test_hash_tb`.`name`, `test_hash_tb`.`create_time`, `test_hash_tb0`.`id` AS `id0`, `test_hash_tb0`.`name` AS `name0`, `test_hash_tb0`.`create_time` AS `create_time0` FROM `test_hash_tb` AS `test_hash_tb` INNER JOIN `test_hash_tb` AS `test_hash_tb0` ON (`test_hash_tb`.`id` = `test_hash_tb0`.`id`) ORDER BY `test_hash_tb0`.`name` LIMIT 10")

-
  sql: |
    select * from test_hash_tb t1,test_hash_tb t2 where t1.name=t2.name order by t2.name limit 10

  plan: |

    topn(sort="name0 asc", offset=0, fetch=10)
      hashjoin(condition="name = name", type="inner")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time` from `test_hash_tb` as `test_hash_tb`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time` from `test_hash_tb` as `test_hash_tb`")

-
  sql: |
    select * from test_hash_tb t1 right join test_hash_tb t2 on t1.name=t2.name order by t1.name limit 10

  plan: |

    TopN(sort="name ASC", offset=0, fetch=10)
      HashJoin(condition="name = name", type="right")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")

-
  sql: |
    select * from test_hash_tb t1 left join test_hash_tb t2 on t1.name=t2.name order by t1.id limit 10

  plan: |
    limit(offset=0, fetch=10)
      hashjoin(condition="name = name", type="left")
        mergesort(sort="id asc", fetch=10)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time` from `test_hash_tb` as `test_hash_tb` order by `id` limit 10")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time` from `test_hash_tb` as `test_hash_tb`")
-
  sql: |
    select * from test_hash_tb t1 left join test_hash_tb t2 on t1.name=t2.name and t1.id=t2.id order by t1.id limit 10

  plan: |

    MergeSort(sort="id ASC", offset=0, fetch=10)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `test_hash_tb`.`id`, `test_hash_tb`.`name`, `test_hash_tb`.`create_time`, `test_hash_tb0`.`id` AS `id0`, `test_hash_tb0`.`name` AS `name0`, `test_hash_tb0`.`create_time` AS `create_time0` FROM `test_hash_tb` AS `test_hash_tb` LEFT JOIN `test_hash_tb` AS `test_hash_tb0` ON ((`test_hash_tb`.`name` = `test_hash_tb0`.`name`) AND (`test_hash_tb`.`id` = `test_hash_tb0`.`id`)) ORDER BY `test_hash_tb`.`id` LIMIT 10")

-
  sql: |
    /*+TDDL:cmd_extra(ENABLE_BKA_JOIN=false)*/
    select * from test_hash_tb t1,test_hash_tb t2 where t1.name=t2.name order by t2.id

  plan: |

    Project(id="id0", name="name0", create_time="create_time0", id0="id", name0="name", create_time0="create_time")
      HashJoin(condition="name = name", type="inner")
        MergeSort(sort="id ASC")
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` ORDER BY `id`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")

-
  sql: |
    select * from test_hash_tb t1,test_hash_tb t2 where t1.name=t2.name order by t2.id limit 10

  plan: |

    limit(offset=0, fetch=10)
      project(id="id0", name="name0", create_time="create_time0", id0="id", name0="name", create_time0="create_time")
        hashjoin(condition="name = name", type="inner")
          mergesort(sort="id asc")
            logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time` from `test_hash_tb` as `test_hash_tb` order by `id`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time` from `test_hash_tb` as `test_hash_tb`")

-
  sql: |
    select distinct t1.name from test_hash_tb t1,test_hash_tb t2 where t1.name=t2.name

  plan: |

    HashAgg(group="name")
      HashJoin(condition="name = name", type="inner")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `name` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `name` FROM `test_hash_tb` AS `test_hash_tb`")

-
  sql: |
    select min(t2.id)
    from
        test_hash_tb t1
      join
        test_hash_tb t2
      on
         t1.name=t2.name
    group by
      t1.create_time,t2.name

  plan: |

    Project(min(t2.id)="min(t2.id)")
      HashAgg(group="create_time,name0", min(t2.id)="MIN(id)")
        HashJoin(condition="name = name", type="inner")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")


-
  sql: |
    select 1
    from
        test_hash_tb4 t1
      join
        test_hash_tb t2
      on
         t1.name=t2.name
    where
       t1.name in (2134, 123100) and t1.int_col1!=1243 and t1.int_col2!=1243 and t1.int_col3!=1243 and t1.int_col4!=1243

  plan: |
    project(1="1")
      hashjoin(condition="name = name", type="inner")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb4", shardcount=4, sql="select `name` from `test_hash_tb4` as `test_hash_tb4` where ((`name` in(2134, 123100)) and (`int_col1` <> 1243) and (`int_col2` <> 1243) and (`int_col3` <> 1243) and (`int_col4` <> 1243))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `name` from `test_hash_tb` as `test_hash_tb` where (`name` in(2134, 123100))")