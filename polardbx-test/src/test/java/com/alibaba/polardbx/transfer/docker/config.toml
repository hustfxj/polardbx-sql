# datasource name, format: '${user_name}:${password}@tcp(${ip}:${port})/${db_name}'
dsn = 'XXX_DSN_XXX'

# number of accounts
row_count = 10000

# initial balance of each account
initial_balance = 100000

# the following suffix will be appended to CREATE TABLE SQL
create_table_suffix = 'PARTITION BY HASH(id) PARTITIONS 16'

# report statistics interval, in seconds, -1 means no print
report_interval = 5

# max test time, in seconds
timeout = 1800

# transfer running in background
[transfer_simple]
enabled = true
threads = 5
inject_commit_failure = false
inject_commit_failure_prob = 0.1

# check sum of balance
[check_balance]
enabled = true
threads = 2
before_check_stmt = 'set transaction_policy = TSO'

# check consistency of replica
[replica_read]
enabled = true
threads = 2
# special hint to force routing query to replica, for PolarDB-X only
replica_read_hint = '/*+TDDL:SLAVE()*/'
# replica datasource
replica_dsn = 'XXX_REPLICA_DSN_XXX'
# set session variables before query, e.g. 'set session tidb_replica_read = "follower"' for TiDB
session_var = ''
# check strong consistency of replica
replica_strong_consistency = true

# check sum of balance using session hint, for PolarDB-X only
[session_hint]
enabled = true
threads = 2

# check consistency of replica using session hint, for PolarDB-X only
[replica_session_hint]
enabled = true
threads = 2
# special hint to force routing query to replica, for PolarDB-X only
replica_read_hint = '/*+TDDL:SLAVE()*/'
# replica datasource
replica_dsn = 'XXX_REPLICA_DSN_XXX'
# set session variables
session_var = ''
# check strong consistency of replica
replica_strong_consistency = true

# check sum of balance using flashback query
[flashback_query]
enabled = true
threads = 2
# flashback to a snapshot before x seconds, here min < x < max
min_seconds = 10
max_seconds = 20

# check consistency of replica using flashback query
[replica_flashback_query]
enabled = true
threads = 5
# flashback to a snapshot before x seconds, here min < x < max
min_seconds = 10
max_seconds = 20
# special hint to force routing query to replica, for PolarDB-X only
replica_read_hint = '/*+TDDL:SLAVE()*/'
# replica datasource
replica_dsn = 'XXX_REPLICA_DSN_XXX'
# set session variables
session_var = ''

# check consistency of downstream database synchronized by cdc
[check_cdc]
enabled = false
threads = 2
replica_dsn = 'XXX_CDC_DSN_XXX'
