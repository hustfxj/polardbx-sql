DROP TABLE IF EXISTS tbl;
CREATE TABLE `tbl` (
	`a` datetime NOT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY RANGE (MONTH(a)) (
	PARTITION p1 VALUES LESS THAN (2)
		STORAGE ENGINE InnoDB,
	PARTITION p2 VALUES LESS THAN (3)
		STORAGE ENGINE InnoDB,
	PARTITION p3 VALUES LESS THAN (4)
		STORAGE ENGINE InnoDB,
	PARTITION p4 VALUES LESS THAN (5)
		STORAGE ENGINE InnoDB,
	PARTITION p5 VALUES LESS THAN (6)
		STORAGE ENGINE InnoDB,
	PARTITION p6 VALUES LESS THAN (7)
		STORAGE ENGINE InnoDB,
	PARTITION p7 VALUES LESS THAN (8)
		STORAGE ENGINE InnoDB,
	PARTITION p8 VALUES LESS THAN (9)
		STORAGE ENGINE InnoDB,
	PARTITION p9 VALUES LESS THAN (10)
		STORAGE ENGINE InnoDB,
	PARTITION p10 VALUES LESS THAN (11)
		STORAGE ENGINE InnoDB,
	PARTITION p11 VALUES LESS THAN (12)
		STORAGE ENGINE InnoDB,
	PARTITION p12 VALUES LESS THAN (13)
		STORAGE ENGINE InnoDB
);
SHOW CREATE TABLE tbl;
Table,Create Table
tbl,CREATE TABLE `tbl` (
	`a` datetime NOT NULL,
	KEY `auto_shard_key_a` USING BTREE (`a`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY RANGE(MONTH(`a`))
(PARTITION p1 VALUES LESS THAN (2) ENGINE = InnoDB,
 PARTITION p2 VALUES LESS THAN (3) ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN (4) ENGINE = InnoDB,
 PARTITION p4 VALUES LESS THAN (5) ENGINE = InnoDB,
 PARTITION p5 VALUES LESS THAN (6) ENGINE = InnoDB,
 PARTITION p6 VALUES LESS THAN (7) ENGINE = InnoDB,
 PARTITION p7 VALUES LESS THAN (8) ENGINE = InnoDB,
 PARTITION p8 VALUES LESS THAN (9) ENGINE = InnoDB,
 PARTITION p9 VALUES LESS THAN (10) ENGINE = InnoDB,
 PARTITION p10 VALUES LESS THAN (11) ENGINE = InnoDB,
 PARTITION p11 VALUES LESS THAN (12) ENGINE = InnoDB,
 PARTITION p12 VALUES LESS THAN (13) ENGINE = InnoDB)
INSERT INTO tbl
VALUES ('1989-01-01 00:00:00');
INSERT INTO tbl
VALUES ('1990-01-01 00:00:01'),
	('1991-01-01 00:00:02'),
	('2019-01-01 00:00:03');
SELECT *
FROM tbl
WHERE a = '1989-01-01 00:00:00'
ORDER BY a;
a
1989-01-01 00:00:00.0
SELECT *
FROM tbl
WHERE a = '1990-01-01 00:00:01'
ORDER BY a;
a
1990-01-01 00:00:01.0
SELECT *
FROM tbl
WHERE a = '1991-01-01 00:00:02'
ORDER BY a;
a
1991-01-01 00:00:02.0
SELECT *
FROM tbl
WHERE a = '2019-01-01 00:00:03'
ORDER BY a;
a
2019-01-01 00:00:03.0
SELECT *
FROM tbl
WHERE (a < '2019-01-02 00:00:00'
		AND a >= '2009-12-31 00:00:00')
	OR a BETWEEN '1989-01-01 00:00:00' AND '1989-11-01 00:00:00'
ORDER BY a;
a
1989-01-01 00:00:00.0
2019-01-01 00:00:03.0
EXPLAIN SELECT *
FROM tbl
WHERE a = '2000-01-01 00:00:00'
ORDER BY a;
Logical ExecutionPlan
PhyTableOperation(tables="tbl[p1]", sql="SELECT `tbl`.`a` FROM ? AS `tbl` WHERE (`tbl`.`a` = ?) ORDER BY `a`", params="2000-01-01 00:00:00")
EXPLAIN SELECT *
FROM tbl
WHERE (a <= '2019-01-01 00:00:00'
		AND a >= '2018-12-31 23:59:59')
	OR a BETWEEN '1989-01-01 00:00:00' AND '1989-05-31 23:59:59'
ORDER BY a;
Logical ExecutionPlan
MergeSort(sort="a ASC")
  LogicalView(tables="tbl[p1,p2,p3,p4,p5,p12]", shardCount=6, sql="SELECT `a` FROM `tbl` AS `tbl` WHERE (((`a` <= ?) AND (`a` >= ?)) OR (`a` BETWEEN ? AND ?)) ORDER BY `a`")
EXPLAIN SELECT *
FROM tbl
WHERE a BETWEEN date_format('2008-08-08 22:23:01', '%Y-%m-%d 01:01:01') AND date_format('2008-12-08 22:23:01', '%Y-%m-%d 01:01:01')
ORDER BY a;
Logical ExecutionPlan
MergeSort(sort="a ASC")
  LogicalView(tables="tbl[p8,p9,p10,p11,p12]", shardCount=5, sql="SELECT `a` FROM `tbl` AS `tbl` WHERE (`a` BETWEEN (DATE_FORMAT(?, '%Y-%m-%d 01:01:01')) AND DATE_FORMAT(?, '%Y-%m-%d 01:01:01')) ORDER BY `a`")
DROP TABLE IF EXISTS t1;
CREATE TABLE `t1` (
	`id` bigint(20) NOT NULL AUTO_INCREMENT,
	`dt` datetime DEFAULT NULL,
	PRIMARY KEY (`id`)
) ENGINE = InnoDB
PARTITION BY HASH (MONTH(`dt`)) PARTITIONS 3;
EXPLAIN SELECT *
FROM t1
WHERE dt = '2021-09-12 18:00:01';
Logical ExecutionPlan
PhyTableOperation(tables="t1[p1]", sql="SELECT `t1`.`id`, `t1`.`dt` FROM ? AS `t1` WHERE (`t1`.`dt` = ?)", params="2021-09-12 18:00:01")
SELECT part_route('', 't1', '2021-09-12 18:00:01');
part_route('', 't1', '2021-09-12 18:00:01')
p1
INSERT INTO t1
VALUES (1, '2021-09-12 18:00:01');
SELECT *
FROM t1
WHERE dt = '2021-09-12 18:00:01';
id,dt
1,2021-09-12 18:00:01.0
SELECT part_route('', 't1', dt) AS part
FROM t1;
part
p1
## test hash
CREATE TABLE `m1` (
	`d` date DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH (MONTH(`d`)) PARTITIONS 16;
SHOW CREATE TABLE m1;
Table,Create Table
m1,CREATE TABLE `m1` (
	`d` date DEFAULT NULL,
	KEY `auto_shard_key_d` USING BTREE (`d`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH(MONTH(`d`))
PARTITIONS 16
INSERT INTO m1
VALUES ('2022-01-01'),
	('2020-02-01'),
	('2021-03-01'),
	('2024-04-01');
SELECT *
FROM m1
WHERE d = '2022-01-01';
d
2022-01-01
SELECT *
FROM m1
WHERE d = '2020-02-01';
d
2020-02-01
SELECT *
FROM m1
WHERE d = '2021-03-01';
d
2021-03-01
SELECT *
FROM m1
WHERE d = '2024-04-01';
d
2024-04-01
EXPLAIN SELECT *
FROM m1
WHERE d = '2022-01-01';
Logical ExecutionPlan
PhyTableOperation(tables="m1[p1]", sql="SELECT `m1`.`d` FROM ? AS `m1` WHERE (`m1`.`d` = ?)", params="2022-01-01")
EXPLAIN SELECT *
FROM m1
WHERE d = '2020-02-01';
Logical ExecutionPlan
PhyTableOperation(tables="m1[p6]", sql="SELECT `m1`.`d` FROM ? AS `m1` WHERE (`m1`.`d` = ?)", params="2020-02-01")
EXPLAIN SELECT *
FROM m1
WHERE d = '2021-03-01';
Logical ExecutionPlan
PhyTableOperation(tables="m1[p14]", sql="SELECT `m1`.`d` FROM ? AS `m1` WHERE (`m1`.`d` = ?)", params="2021-03-01")
EXPLAIN SELECT *
FROM m1
WHERE d = '2024-04-01';
Logical ExecutionPlan
PhyTableOperation(tables="m1[p7]", sql="SELECT `m1`.`d` FROM ? AS `m1` WHERE (`m1`.`d` = ?)", params="2024-04-01")
SELECT *
FROM m1
WHERE (d > '2020-02-01'
		AND d < '2022-01-01')
	OR d BETWEEN '2021-03-01' AND '2022-01-01'
ORDER BY d;
d
2021-03-01
2022-01-01
SELECT *
FROM m1
WHERE d > '2021-03-01'
ORDER BY d;
d
2022-01-01
2024-04-01
EXPLAIN SELECT *
FROM m1
WHERE d > '2021-03-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m1[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `d` FROM `m1` AS `m1` WHERE (`d` > ?) ORDER BY `d`")
SELECT *
FROM m1
WHERE d > '2021-03-01'
	AND d < '2050-01-01'
ORDER BY d;
d
2022-01-01
2024-04-01
EXPLAIN SELECT *
FROM m1
WHERE d > '2021-03-01'
	AND d < '2050-01-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m1[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `d` FROM `m1` AS `m1` WHERE ((`d` > ?) AND (`d` < ?)) ORDER BY `d`")
SELECT *
FROM m1
WHERE d > '2021-03-01'
	AND d <= '2022-01-01'
ORDER BY d;
d
2022-01-01
EXPLAIN SELECT *
FROM m1
WHERE d > '2021-03-01'
	AND d <= '2022-01-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m1[p1,p3,p4,p7,p9,p11,p12,p14,p16]", shardCount=9, sql="SELECT `d` FROM `m1` AS `m1` WHERE ((`d` > ?) AND (`d` <= ?)) ORDER BY `d`")
## test range
CREATE TABLE `m2` (
	`d` date DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY RANGE (MONTH(`d`)) (
	PARTITION p0 VALUES LESS THAN (3),
	PARTITION p1 VALUES LESS THAN (6),
	PARTITION p2 VALUES LESS THAN (9),
	PARTITION p3 VALUES LESS THAN MAXVALUE
);
SHOW CREATE TABLE m2;
Table,Create Table
m2,CREATE TABLE `m2` (
	`d` date DEFAULT NULL,
	KEY `auto_shard_key_d` USING BTREE (`d`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY RANGE(MONTH(`d`))
(PARTITION p0 VALUES LESS THAN (3) ENGINE = InnoDB,
 PARTITION p1 VALUES LESS THAN (6) ENGINE = InnoDB,
 PARTITION p2 VALUES LESS THAN (9) ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB)
INSERT INTO m2
VALUES ('2022-01-01'),
	('2020-03-01'),
	('2021-06-01'),
	('2024-09-01');
SELECT *
FROM m2
WHERE d = '2022-01-01';
d
2022-01-01
SELECT *
FROM m2
WHERE d = '2020-03-01';
d
2020-03-01
SELECT *
FROM m2
WHERE d = '2021-06-01';
d
2021-06-01
SELECT *
FROM m2
WHERE d = '2024-09-01';
d
2024-09-01
EXPLAIN SELECT *
FROM m2
WHERE d = '2022-01-01';
Logical ExecutionPlan
PhyTableOperation(tables="m2[p0]", sql="SELECT `m2`.`d` FROM ? AS `m2` WHERE (`m2`.`d` = ?)", params="2022-01-01")
EXPLAIN SELECT *
FROM m2
WHERE d = '2020-03-01';
Logical ExecutionPlan
PhyTableOperation(tables="m2[p1]", sql="SELECT `m2`.`d` FROM ? AS `m2` WHERE (`m2`.`d` = ?)", params="2020-03-01")
EXPLAIN SELECT *
FROM m2
WHERE d = '2021-06-01';
Logical ExecutionPlan
PhyTableOperation(tables="m2[p2]", sql="SELECT `m2`.`d` FROM ? AS `m2` WHERE (`m2`.`d` = ?)", params="2021-06-01")
EXPLAIN SELECT *
FROM m2
WHERE d = '2024-09-01';
Logical ExecutionPlan
PhyTableOperation(tables="m2[p3]", sql="SELECT `m2`.`d` FROM ? AS `m2` WHERE (`m2`.`d` = ?)", params="2024-09-01")
SELECT *
FROM m2
WHERE (d > '2020-03-01'
		AND d < '2022-01-01')
	OR d BETWEEN '2021-06-01' AND '2022-01-01'
ORDER BY d;
d
2021-06-01
2022-01-01
SELECT *
FROM m2
WHERE d > '2020-03-01'
ORDER BY d;
d
2021-06-01
2022-01-01
2024-09-01
EXPLAIN SELECT *
FROM m2
WHERE d > '2020-03-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m2[p0,p1,p2,p3]", shardCount=4, sql="SELECT `d` FROM `m2` AS `m2` WHERE (`d` > ?) ORDER BY `d`")
SELECT *
FROM m2
WHERE d > '2020-03-01'
	AND d < '2024-09-01'
ORDER BY d;
d
2021-06-01
2022-01-01
EXPLAIN SELECT *
FROM m2
WHERE d > '2020-03-01'
	AND d < '2024-09-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m2[p0,p1,p2,p3]", shardCount=4, sql="SELECT `d` FROM `m2` AS `m2` WHERE ((`d` > ?) AND (`d` < ?)) ORDER BY `d`")
SELECT *
FROM m2
WHERE d > '2020-02-01'
	AND d < '2020-06-01'
ORDER BY d;
d
2020-03-01
EXPLAIN SELECT *
FROM m2
WHERE d > '2020-02-01'
	AND d < '2020-06-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m2[p0,p1,p2]", shardCount=3, sql="SELECT `d` FROM `m2` AS `m2` WHERE ((`d` > ?) AND (`d` < ?)) ORDER BY `d`")
## test list
CREATE TABLE `m3` (
	`d` date DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY LIST (MONTH(`d`)) (
	PARTITION p0 VALUES IN (1, 2, 3),
	PARTITION p1 VALUES IN (4, 5, 6),
	PARTITION p2 VALUES IN (7, 8, 9),
	PARTITION pd VALUES IN (DEFAULT)
);
SHOW CREATE TABLE m3;
Table,Create Table
m3,CREATE TABLE `m3` (
	`d` date DEFAULT NULL,
	KEY `auto_shard_key_d` USING BTREE (`d`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY LIST(MONTH(`d`))
(PARTITION p0 VALUES IN (1,2,3) ENGINE = InnoDB,
 PARTITION p1 VALUES IN (4,5,6) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (7,8,9) ENGINE = InnoDB,
 PARTITION pd VALUES IN (DEFAULT) ENGINE = InnoDB)
INSERT INTO m3
VALUES ('2022-01-01'),
	('2020-04-01'),
	('2021-07-01'),
	('2024-12-31');
SELECT *
FROM m3
WHERE d = '2022-01-01';
d
2022-01-01
SELECT *
FROM m3
WHERE d = '2020-04-01';
d
2020-04-01
SELECT *
FROM m3
WHERE d = '2021-07-01';
d
2021-07-01
SELECT *
FROM m3
WHERE d = '2024-12-31';
d
2024-12-31
EXPLAIN SELECT *
FROM m3
WHERE d = '2022-01-01';
Logical ExecutionPlan
PhyTableOperation(tables="m3[p0]", sql="SELECT `m3`.`d` FROM ? AS `m3` WHERE (`m3`.`d` = ?)", params="2022-01-01")
EXPLAIN SELECT *
FROM m3
WHERE d = '2020-04-01';
Logical ExecutionPlan
PhyTableOperation(tables="m3[p1]", sql="SELECT `m3`.`d` FROM ? AS `m3` WHERE (`m3`.`d` = ?)", params="2020-04-01")
EXPLAIN SELECT *
FROM m3
WHERE d = '2021-07-01';
Logical ExecutionPlan
PhyTableOperation(tables="m3[p2]", sql="SELECT `m3`.`d` FROM ? AS `m3` WHERE (`m3`.`d` = ?)", params="2021-07-01")
EXPLAIN SELECT *
FROM m3
WHERE d = '2024-12-31';
Logical ExecutionPlan
PhyTableOperation(tables="m3[pd]", sql="SELECT `m3`.`d` FROM ? AS `m3` WHERE (`m3`.`d` = ?)", params="2024-12-31")
SELECT *
FROM m3
WHERE (d > '2020-04-01'
		AND d < '2022-01-01')
	OR d BETWEEN '2021-07-01' AND '2024-12-31'
ORDER BY d;
d
2021-07-01
2022-01-01
2024-12-31
SELECT *
FROM m3
WHERE d > '2021-07-01'
ORDER BY d;
d
2022-01-01
2024-12-31
EXPLAIN SELECT *
FROM m3
WHERE d > '2021-07-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m3[p0,p1,p2,pd]", shardCount=4, sql="SELECT `d` FROM `m3` AS `m3` WHERE (`d` > ?) ORDER BY `d`")
SELECT *
FROM m3
WHERE d > '2020-04-01'
	AND d < '2024-12-31'
ORDER BY d;
d
2021-07-01
2022-01-01
EXPLAIN SELECT *
FROM m3
WHERE d > '2020-04-01'
	AND d < '2024-12-31'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m3[p0,p1,p2,pd]", shardCount=4, sql="SELECT `d` FROM `m3` AS `m3` WHERE ((`d` > ?) AND (`d` < ?)) ORDER BY `d`")
SELECT *
FROM m3
WHERE d > '2020-01-01'
	AND d < '2020-05-01'
ORDER BY d;
d
2020-04-01
EXPLAIN SELECT *
FROM m3
WHERE d > '2020-01-01'
	AND d < '2020-05-01'
ORDER BY d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="m3[p0,p1]", shardCount=2, sql="SELECT `d` FROM `m3` AS `m3` WHERE ((`d` > ?) AND (`d` < ?)) ORDER BY `d`")