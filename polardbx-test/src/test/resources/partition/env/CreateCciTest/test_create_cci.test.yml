# clean
drop table if exists `t_order_0`;
drop table if exists `t_order_1`;
drop table if exists `t_order_single`;
drop table if exists `t_order_broadcast`;
drop table if exists `t_order_single_1`;
drop table if exists `t_order_broadcast_1`;
drop table if exists `heavy_qps_table`;
drop table if exists `nation`;

CREATE TABLE `t_order_0` (
`id` bigint(11) NOT NULL AUTO_INCREMENT,
`order_id` varchar(20) DEFAULT NULL,
`buyer_id` varchar(20) DEFAULT NULL,
`seller_id` varchar(20) DEFAULT NULL,
`order_snapshot` longtext,
`order_detail` longtext,
`gmt_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`rint` double(10, 2),
PRIMARY KEY (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8;

CREATE TABLE `t_order_1` (
`id` bigint(11) NOT NULL,
`order_id` varchar(20) DEFAULT NULL,
`buyer_id` varchar(20) DEFAULT NULL,
`seller_id` varchar(20) DEFAULT NULL,
`order_snapshot` longtext,
`order_detail` longtext,
`gmt_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`rint` double(10, 2)
) ENGINE = InnoDB DEFAULT CHARSET = utf8;

CREATE TABLE `t_order_single` (
`id` bigint(11) NOT NULL AUTO_INCREMENT,
`order_id` varchar(20) DEFAULT NULL,
`buyer_id` varchar(20) DEFAULT NULL,
`seller_id` varchar(20) DEFAULT NULL,
`order_snapshot` longtext,
`order_detail` longtext,
`gmt_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`rint` double(10, 2),
PRIMARY KEY (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 single;

CREATE TABLE `t_order_broadcast` (
`id` bigint(11) NOT NULL AUTO_INCREMENT,
`order_id` varchar(20) DEFAULT NULL,
`buyer_id` varchar(20) DEFAULT NULL,
`seller_id` varchar(20) DEFAULT NULL,
`order_snapshot` longtext,
`order_detail` longtext,
`gmt_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`rint` double(10, 2),
PRIMARY KEY (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 broadcast;

CREATE TABLE `t_order_single_1` (
`id` bigint(11) NOT NULL,
`order_id` varchar(20) DEFAULT NULL,
`buyer_id` varchar(20) DEFAULT NULL,
`seller_id` varchar(20) DEFAULT NULL,
`order_snapshot` longtext,
`order_detail` longtext,
`gmt_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`rint` double(10, 2)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 single;

CREATE TABLE `t_order_broadcast_1` (
`id` bigint(11) NOT NULL,
`order_id` varchar(20) DEFAULT NULL,
`buyer_id` varchar(20) DEFAULT NULL,
`seller_id` varchar(20) DEFAULT NULL,
`order_snapshot` longtext,
`order_detail` longtext,
`gmt_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`rint` double(10, 2)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 broadcast;

CREATE TABLE `heavy_qps_table` (
`id` bigint(20) NOT NULL AUTO_INCREMENT,
PRIMARY KEY (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY KEY(`id`)
PARTITIONS 3;

CREATE TABLE `nation` (
`n_nationkey` int(11) NOT NULL,
`n_name` varchar(25) NOT NULL,
`n_regionkey` int(11) NOT NULL,
`n_comment` varchar(152) DEFAULT NULL,
PRIMARY KEY (`n_nationkey`)
) ENGINE = InnoDB DEFAULT CHARSET = latin1 PARTITION BY KEY (`n_nationkey`) PARTITIONS 3;

  # create cci on auto partition table (without PARTITION BY and PARTITIONS) 
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;

  # create cci on auto partition table (with PARTITION BY, without PARTITIONS)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;
  
  # create cci on auto partition table (without PARTITION BY and PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;
  
  # create cci on auto partition table (with PARTITION BY, without PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;
  
  # create cci on partition table (with PARTITION BY and PARTITIONS) 
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`) PARTITION BY HASH (`id`) PARTITIONS 9;
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;

  # create cci on auto partition table (without PARTITION BY and PARTITIONS, using implicit pk)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask",ENABLE_CCI_ON_TABLE_WITH_IMPLICIT_PK=true)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_1`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_1` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_1`;
check columnar index `cci_seller_id` on `t_order_1` meta;
DROP INDEX `cci_seller_id` ON `t_order_1`;

  # create cci on partition table (with PARTITION BY, without PARTITIONS)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;
  
  # create cci on partition table (without PARTITION BY and PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;
  
  # create cci on partition table (with PARTITION BY, without PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_0`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_0` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_0`;
check columnar index `cci_seller_id` on `t_order_0` meta;
DROP INDEX `cci_seller_id` ON `t_order_0`;
  
  # create cci on single table (with PARTITION BY and PARTITIONS)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_single`(`seller_id`) PARTITION BY HASH (`id`) PARTITIONS 9;
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_single` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_single`;
check columnar index `cci_seller_id` on `t_order_single` meta;
DROP INDEX `cci_seller_id` ON `t_order_single`;

  # create cci on single table (without PARTITION BY and PARTITIONS) 
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_single`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_single` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_single`;
check columnar index `cci_seller_id` on `t_order_single` meta;
DROP INDEX `cci_seller_id` ON `t_order_single`;

  # create cci on single table (with PARTITION BY, without PARTITIONS)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_single`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_single` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_single`;
check columnar index `cci_seller_id` on `t_order_single` meta;
DROP INDEX `cci_seller_id` ON `t_order_single`;
  
  # create cci on single table (without PARTITION BY and PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_single`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_single` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_single`;
check columnar index `cci_seller_id` on `t_order_single` meta;
DROP INDEX `cci_seller_id` ON `t_order_single`;
  
  # create cci on single table (with PARTITION BY, without PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_single`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_single` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_single`;
check columnar index `cci_seller_id` on `t_order_single` meta;
DROP INDEX `cci_seller_id` ON `t_order_single`;

  # create cci on single table (without PARTITION BY and PARTITIONS, using implicit pk)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask",ENABLE_CCI_ON_TABLE_WITH_IMPLICIT_PK=true)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_single_1`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_single_1` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_single_1`;
check columnar index `cci_seller_id` on `t_order_single_1` meta;
DROP INDEX `cci_seller_id` ON `t_order_single_1`;
  
  # create cci on broadcast table (with PARTITION BY and PARTITIONS)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_broadcast`(`seller_id`) PARTITION BY HASH (`id`) PARTITIONS 9;
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_broadcast` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_broadcast`;
check columnar index `cci_seller_id` on `t_order_broadcast` meta;
DROP INDEX `cci_seller_id` ON `t_order_broadcast`;

  # create cci on broadcast table (with PARTITION BY, without PARTITIONS)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_broadcast`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_broadcast` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_broadcast`;
check columnar index `cci_seller_id` on `t_order_broadcast` meta;
DROP INDEX `cci_seller_id` ON `t_order_broadcast`;
  
  # create cci on broadcast table (without PARTITION BY and PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_broadcast`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_broadcast` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_broadcast`;
check columnar index `cci_seller_id` on `t_order_broadcast` meta;
DROP INDEX `cci_seller_id` ON `t_order_broadcast`;
  
  # create cci on broadcast table (with PARTITION BY, without PARTITIONS), with COLUMNAR_DEFAULT_PARTITIONS=20
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask", COLUMNAR_DEFAULT_PARTITIONS=20)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_broadcast`(`seller_id`) PARTITION BY HASH (`id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_broadcast` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_broadcast`;
check columnar index `cci_seller_id` on `t_order_broadcast` meta;
DROP INDEX `cci_seller_id` ON `t_order_broadcast`;

  # create cci on broadcast table (without PARTITION BY and PARTITIONS, using implicit pk)
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask",ENABLE_CCI_ON_TABLE_WITH_IMPLICIT_PK=true)*/
CREATE CLUSTERED COLUMNAR INDEX `cci_seller_id` ON `t_order_broadcast_1`(`seller_id`);
/*+TDDL:CMD_EXTRA(ALTER_CCI_STATUS=true, ALTER_CCI_STATUS_BEFORE=CREATING, ALTER_CCI_STATUS_AFTER=PUBLIC)*/
ALTER TABLE `t_order_broadcast_1` alter index `cci_seller_id` VISIBLE;
show full create table `t_order_broadcast_1`;
check columnar index `cci_seller_id` on `t_order_broadcast_1` meta;
DROP INDEX `cci_seller_id` ON `t_order_broadcast_1`;
  
  # create cci on partition table without covering column
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `heavy_qps_table_cci` ON `heavy_qps_table`(`id`) PARTITION BY HASH(id) PARTITIONS 4;
show full create table `heavy_qps_table`;
check columnar index `heavy_qps_table_cci` on `heavy_qps_table` meta;
DROP INDEX `heavy_qps_table_cci` ON `heavy_qps_table`;

  # create cci on partition table with dictionary columns
/*+TDDL:CMD_EXTRA(SKIP_DDL_TASKS="WaitColumnarTableCreationTask")*/
CREATE CLUSTERED COLUMNAR INDEX `nation_col_index` ON `nation`(`n_nationkey`) PARTITION BY HASH (`n_nationkey`) PARTITIONS 1 DICTIONARY_COLUMNS = 'n_name,n_comment';
show create table `nation`;
show full create table `nation`;
check columnar index `nation_col_index` on `nation` meta;
DROP INDEX `nation_col_index` ON `nation`;

# cleanup
drop table if exists `t_order_0`;
drop table if exists `t_order_1`;
drop table if exists `t_order_single`;
drop table if exists `t_order_broadcast`;
drop table if exists `t_order_single_1`;
drop table if exists `t_order_broadcast_1`;
drop table if exists `heavy_qps_table`;
drop table if exists `nation`;
